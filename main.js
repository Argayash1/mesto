(()=>{"use strict";var __webpack_modules__={887:()=>{eval('\n;// CONCATENATED MODULE: ./src/utils/config.js\nvar config = {\n  formSelector: \'.popup__form\',\n  inputSelector: \'.popup__input\',\n  submitButtonSelector: \'.popup__save\',\n  inactiveButtonClass: \'popup__save_disabled\',\n  inputErrorClass: \'popup__input_type_error\',\n  errorClass: \'popup__error_visible\'\n};\n/* harmony default export */ const utils_config = (config);\n;// CONCATENATED MODULE: ./src/utils/constants.js\n// Константы (переменные)\n// _______________________________________________________________________________________________________________\n\n// Попап редактирования профиля\nvar popupProfileOpenButtonElement = document.querySelector(\'.profile-info__edit-button\'); // Нашли кнопку открытия попапа редактирования профиля.\n\n// Попап добавления карточки  \nvar popupCardOpenButtonElement = document.querySelector(\'.profile__add-button\'); // Нашли кнопку открытия попапа добавления карточки\n\n// Попап обновления аватара\nvar profileImageElement = document.querySelector(\'.profile__avatar\'); // Нашли аватар в блоке профиля\n\n// Попап просмотра аватара\n// const profileNameElement = document.querySelector(\'.profile-info__name\'); // Нашли элемент с именем пользователя в блоке профиля\n\n\n;// CONCATENATED MODULE: ./src/components/Card.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Card = /*#__PURE__*/function () {\n  function Card(data, templateSelector, handleCardClick, handleDeleteClick, handleLikeClick, userID) {\n    var _this = this;\n    _classCallCheck(this, Card);\n    _defineProperty(this, "handleLikeButtonClick", function () {\n      _this._likeButton.classList.toggle(\'element__like-button_active\');\n    });\n    _defineProperty(this, "handleDeleteButtonClick", function () {\n      _this._element.remove();\n      _this._element = null;\n    });\n    _defineProperty(this, "_toggleLikeButton", function () {\n      if (_this.isLiked()) {\n        _this.handleLikeButtonClick();\n      }\n    });\n    this._text = data.name;\n    this._link = data.link;\n    this._ownerId = data.owner._id;\n    this._id = data._id;\n    this._likes = data.likes;\n    this._userID = userID;\n    this._templateSelector = templateSelector; // записали селектор в приватное поле \n    this._handleCardClick = handleCardClick;\n    this._handleDeleteClick = handleDeleteClick;\n    this._handleLikeClick = handleLikeClick;\n  }\n\n  //Метод, который найдёт по селектору темплейта темплейт-элемент (шаблон карточки), извлечёт его содержимое,\n  //в содержимом найдёт элемент с классом card, клонирует его и вернёт клонированный элемент.\n  _createClass(Card, [{\n    key: "_getTemplate",\n    value: function _getTemplate() {\n      var cardElement = document.querySelector(this._templateSelector).content.querySelector(\'.element\').cloneNode(true);\n      return cardElement;\n    }\n  }, {\n    key: "generateCard",\n    value: function generateCard() {\n      // Запишем разметку в приватное поле _element. \n      // Так у других элементов появится доступ к ней.\n      this._element = this._getTemplate();\n      // Запишем изображение из темлейта (шаблона) в переменную, т. к. \n      // к нему нужно будет обращаться дважды (задавая атрибуты src и alt).\n      this._elementImg = this._element.querySelector(\'.element__image\');\n      this._likeButton = this._element.querySelector(\'.element__like-button\');\n      this._countOfLikes = this._element.querySelector(\'.element__count-likes\');\n      this._deleteButton = this._element.querySelector(\'.element__delete-button\');\n      this._setEventListeners();\n      this._handleRemoveDeleteButton();\n      this._toggleLikeButton();\n      this._showCountofLikes();\n\n      // Добавим данные\n      this._elementImg.src = this._link;\n      this._elementImg.alt = this._text;\n      this._element.querySelector(\'.element__title\').textContent = this._text;\n\n      // Вернём элемент наружу\n      return this._element;\n    }\n  }, {\n    key: "_setEventListeners",\n    value: function _setEventListeners() {\n      var _this2 = this;\n      this._likeButton.addEventListener(\'click\', function () {\n        _this2._handleLikeClick(_this2._id, _this2);\n      });\n      this._deleteButton.addEventListener(\'click\', function () {\n        _this2._handleDeleteClick(_this2);\n      });\n      this._elementImg.addEventListener(\'click\', function () {\n        _this2._handleCardClick(_this2._text, _this2._link);\n      });\n    }\n\n    // добавили метод _handleLikeButtonClick\n  }, {\n    key: "_handleRemoveDeleteButton",\n    value:\n    // Добавили метод _handleRemoveDeleteButton\n    function _handleRemoveDeleteButton() {\n      if (this._ownerId != this._userID) {\n        this._deleteButton.classList.add(\'element__delete-button_hide\');\n      }\n    }\n  }, {\n    key: "_showCountofLikes",\n    value: function _showCountofLikes() {\n      this._countOfLikes.textContent = this._likes.length;\n    }\n  }, {\n    key: "isLiked",\n    value: function isLiked() {\n      var _this3 = this;\n      var isLikedByMe = this._likes.some(function (like) {\n        return like._id === _this3._userID;\n      });\n      return isLikedByMe;\n    }\n  }, {\n    key: "setLikesValue",\n    value: function setLikesValue(likes) {\n      this._likes = likes;\n      this._countOfLikes.textContent = likes.length;\n    }\n  }]);\n  return Card;\n}();\n\n;// CONCATENATED MODULE: ./src/components/FormValidator.js\nfunction FormValidator_typeof(obj) { "@babel/helpers - typeof"; return FormValidator_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, FormValidator_typeof(obj); }\nfunction FormValidator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction FormValidator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, FormValidator_toPropertyKey(descriptor.key), descriptor); } }\nfunction FormValidator_createClass(Constructor, protoProps, staticProps) { if (protoProps) FormValidator_defineProperties(Constructor.prototype, protoProps); if (staticProps) FormValidator_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction FormValidator_toPropertyKey(arg) { var key = FormValidator_toPrimitive(arg, "string"); return FormValidator_typeof(key) === "symbol" ? key : String(key); }\nfunction FormValidator_toPrimitive(input, hint) { if (FormValidator_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (FormValidator_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar FormValidator = /*#__PURE__*/function () {\n  function FormValidator(config, formElement) {\n    FormValidator_classCallCheck(this, FormValidator);\n    this._inputSelector = config.inputSelector;\n    this._submitButtonSelector = config.submitButtonSelector;\n    this._inactiveButtonClass = config.inactiveButtonClass;\n    this._inputErrorClass = config.inputErrorClass;\n    this._errorClass = config.errorClass;\n    this._formElement = formElement;\n    this._inputList = Array.from(this._formElement.querySelectorAll(this._inputSelector));\n    this._submitButton = this._formElement.querySelector(this._submitButtonSelector);\n  }\n  FormValidator_createClass(FormValidator, [{\n    key: "_showInputError",\n    value:\n    //Создаём функцию показа ошибки в инпуте (в поле ввода)\n    function _showInputError(input, errorMessage) {\n      var error = this._formElement.querySelector("#".concat(input.id, "-error"));\n      input.classList.add(this._inputErrorClass);\n      error.textContent = errorMessage;\n      error.classList.add(this._errorClass);\n    }\n  }, {\n    key: "_hideInputError",\n    value:\n    //Создаём функцию скрытия ошибки в инпуте (в поле ввода)\n    function _hideInputError(input) {\n      var error = this._formElement.querySelector("#".concat(input.id, "-error"));\n      input.classList.remove(this._inputErrorClass);\n      error.classList.remove(this._errorClass);\n      error.textContent = \'\';\n    }\n  }, {\n    key: "_checkInputValidity",\n    value:\n    //Создаём функцию проверки валидности инпутов (полей ввода)\n    function _checkInputValidity(input) {\n      if (!input.validity.valid) {\n        this._showInputError(input, input.validationMessage);\n      } else {\n        this._hideInputError(input);\n      }\n    }\n  }, {\n    key: "_setEventListeners",\n    value:\n    //Создаём функцию установки слушателей(обработчиков) на все инпуты\n    function _setEventListeners() {\n      var _this = this;\n      this._inputList.forEach(function (input) {\n        input.addEventListener(\'input\', function () {\n          _this._checkInputValidity(input);\n          _this._toggleButtonState(_this._inputList, _this._submitButton);\n        });\n      });\n    }\n  }, {\n    key: "enableValidation",\n    value:\n    //Создаём функцию запуска валидации\n    function enableValidation() {\n      this._setEventListeners();\n    }\n  }, {\n    key: "_hasInvalidInput",\n    value:\n    //Создаём функцию проверки ВСЕХ инпутов на валидность (она отвечает на вопрос: «Есть ли здесь хотя бы одно поле, которое не прошло валидацию?».)\n    // Функция принимает массив полей\n    function _hasInvalidInput(inputList) {\n      // проходим по этому массиву методом some\n      return inputList.some(function (inputElement) {\n        // Если поле не валидно, колбэк вернёт true\n        // Обход массива прекратится и вся функция\n        // hasInvalidInput вернёт true\n\n        return !inputElement.validity.valid;\n      });\n    }\n  }, {\n    key: "_toggleButtonState",\n    value:\n    // Создаём функцию активирования (раздизэйблить) и деактивирования (задизэйблить) кнопки \n    // Функция принимает массив полей ввода\n    // и элемент кнопки, состояние которой нужно менять\n    function _toggleButtonState() {\n      // Если есть хотя бы один невалидный инпут\n      if (this._hasInvalidInput(this._inputList)) {\n        // сделай кнопку неактивной\n        this.disableSubmitButton(this._submitButton);\n      } else {\n        // иначе сделай кнопку активной\n        this.enableSubmitButton(this._submitButton);\n      }\n    }\n  }, {\n    key: "disableSubmitButton",\n    value: function disableSubmitButton(buttonElement) {\n      // сделай кнопку неактивной\n      buttonElement.classList.add(this._inactiveButtonClass);\n      buttonElement.disabled = true;\n    }\n  }, {\n    key: "enableSubmitButton",\n    value: function enableSubmitButton(buttonElement) {\n      // сделай кнопку активной\n      buttonElement.classList.remove(this._inactiveButtonClass);\n      buttonElement.disabled = false;\n    }\n\n    // Огромное Вам спасибо, какая же интересная функция! Повозился с ней немного, и когда разобрался,\n    // увидел, как она здорово работает! \n  }, {\n    key: "resetValidation",\n    value: function resetValidation() {\n      var _this2 = this;\n      this._toggleButtonState(); // <== управляем кнопкой == this._inputList, this._submitButton\n\n      this._inputList.forEach(function (input) {\n        _this2._hideInputError(input); // <==очищаем ошибки ==\n      });\n    }\n  }]);\n  return FormValidator;\n}();\n\n;// CONCATENATED MODULE: ./src/components/Section.js\nfunction Section_typeof(obj) { "@babel/helpers - typeof"; return Section_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Section_typeof(obj); }\nfunction Section_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Section_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Section_toPropertyKey(descriptor.key), descriptor); } }\nfunction Section_createClass(Constructor, protoProps, staticProps) { if (protoProps) Section_defineProperties(Constructor.prototype, protoProps); if (staticProps) Section_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Section_toPropertyKey(arg) { var key = Section_toPrimitive(arg, "string"); return Section_typeof(key) === "symbol" ? key : String(key); }\nfunction Section_toPrimitive(input, hint) { if (Section_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Section_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Section = /*#__PURE__*/function () {\n  function Section(_ref, containerSelector) {\n    var renderer = _ref.renderer;\n    Section_classCallCheck(this, Section);\n    this._renderer = renderer; // renderer — это функция\n    this._container = document.querySelector(containerSelector); // container - это найденный по селектору \n    // контейнер, в который будут добавляться (вставляться) отрендеренные карточки\n  }\n  Section_createClass(Section, [{\n    key: "renderItems",\n    value:\n    // Создаём метод renderItems, который получает на вход в качестве аргумента массив карточек, проходится по массиву \n    // (перебирает массив) и для каждого из объектов карточек из массива вычзывает метод _addItem, который с помощью \n    // вызова метода _renderer создаёт и подготавливает к публикации экземпляр (готовый DOM-элемент) карточкиб а затем \n    // вставляет его в DOM - в данном случае в список карточек (контейнер с карточками).\n    function renderItems(items) {\n      var _this = this;\n      items.reverse().forEach(function (item) {\n        _this.addItem(item); // Метод reverse() здесь применён для того, чтобы\n        // при переборе массива мкарточек методом forEach развернуть массив в обратном порядке, благодаря чему\n        // созданная пользователем карточка будет в начале массива как в момент создания карточки, так и после \n        // перезагрузки (рефреша) страницы, то есть она при каждом создании карточки другим пользотвателем будет \n        // продвигаться по порядку сверху вниз, а не снизу вверх, как это было без применения этого метода.\n      });\n    }\n\n    // Создаём метод _addItem, который вставляет готовый элемент карточки в DOM - в данном случае в список карточек \n    // (контейнер с карточками). В качестве аргумента передаём методу addItem вызов функции _renderer, благодаря \n    // которому создаётся и подготавливается к публикации экземпляр (готовый DOM-элемент) карточки. \n  }, {\n    key: "addItem",\n    value: function addItem(item) {\n      this._container.prepend(this._renderer(item)); // вызываем _renderer, передав item\n    }\n  }]);\n  return Section;\n}();\n\n;// CONCATENATED MODULE: ./src/components/Popup.js\nfunction Popup_typeof(obj) { "@babel/helpers - typeof"; return Popup_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Popup_typeof(obj); }\nfunction Popup_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Popup_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Popup_toPropertyKey(descriptor.key), descriptor); } }\nfunction Popup_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popup_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popup_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Popup_defineProperty(obj, key, value) { key = Popup_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction Popup_toPropertyKey(arg) { var key = Popup_toPrimitive(arg, "string"); return Popup_typeof(key) === "symbol" ? key : String(key); }\nfunction Popup_toPrimitive(input, hint) { if (Popup_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Popup_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Popup = /*#__PURE__*/function () {\n  function Popup(popupSelector) {\n    var _this = this;\n    Popup_classCallCheck(this, Popup);\n    Popup_defineProperty(this, "_handleEscClose", function (e) {\n      if (e.key === \'Escape\') {\n        _this.close();\n      }\n    });\n    this._popupElement = document.querySelector(popupSelector);\n  }\n  Popup_createClass(Popup, [{\n    key: "open",\n    value: function open() {\n      this._popupElement.classList.add(\'popup_is-opened\');\n      document.addEventListener(\'keydown\', this._handleEscClose);\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      this._popupElement.classList.remove(\'popup_is-opened\');\n      document.removeEventListener(\'keydown\', this._handleEscClose);\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this2 = this;\n      this._popupElement.querySelector(\'.popup__close\').addEventListener(\'click\', function () {\n        _this2.close();\n      });\n      this._popupElement.addEventListener(\'mousedown\', function (e) {\n        if (e.target.classList.contains(\'popup_is-opened\')) {\n          _this2.close();\n        }\n      });\n    }\n  }]);\n  return Popup;\n}();\n\n;// CONCATENATED MODULE: ./src/components/PopupWithImage.js\nfunction PopupWithImage_typeof(obj) { "@babel/helpers - typeof"; return PopupWithImage_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithImage_typeof(obj); }\nfunction PopupWithImage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithImage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithImage_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithImage_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithImage_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithImage_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithImage_toPropertyKey(arg) { var key = PopupWithImage_toPrimitive(arg, "string"); return PopupWithImage_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithImage_toPrimitive(input, hint) { if (PopupWithImage_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithImage_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (PopupWithImage_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar PopupWithImage = /*#__PURE__*/function (_Popup) {\n  _inherits(PopupWithImage, _Popup);\n  var _super = _createSuper(PopupWithImage);\n  function PopupWithImage(popupSelector) {\n    var _this;\n    PopupWithImage_classCallCheck(this, PopupWithImage);\n    _this = _super.call(this, popupSelector);\n    _this._popupImageElement = _this._popupElement.querySelector(\'.popup__photo\');\n    _this._popupCaptionElement = _this._popupElement.querySelector(\'.popup__caption\');\n    return _this;\n  }\n  PopupWithImage_createClass(PopupWithImage, [{\n    key: "open",\n    value: function open(name, link) {\n      this._popupImageElement.src = link;\n      this._popupImageElement.alt = name;\n      this._popupCaptionElement.textContent = name;\n      _get(_getPrototypeOf(PopupWithImage.prototype), "open", this).call(this);\n    }\n  }]);\n  return PopupWithImage;\n}(Popup);\n\n;// CONCATENATED MODULE: ./src/components/PopupWithForm.js\nfunction PopupWithForm_typeof(obj) { "@babel/helpers - typeof"; return PopupWithForm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithForm_typeof(obj); }\nfunction PopupWithForm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithForm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithForm_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithForm_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithForm_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithForm_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithForm_toPropertyKey(arg) { var key = PopupWithForm_toPrimitive(arg, "string"); return PopupWithForm_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithForm_toPrimitive(input, hint) { if (PopupWithForm_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithForm_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupWithForm_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithForm_get = Reflect.get.bind(); } else { PopupWithForm_get = function _get(target, property, receiver) { var base = PopupWithForm_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithForm_get.apply(this, arguments); }\nfunction PopupWithForm_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithForm_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithForm_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithForm_setPrototypeOf(subClass, superClass); }\nfunction PopupWithForm_setPrototypeOf(o, p) { PopupWithForm_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithForm_setPrototypeOf(o, p); }\nfunction PopupWithForm_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithForm_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithForm_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithForm_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithForm_possibleConstructorReturn(this, result); }; }\nfunction PopupWithForm_possibleConstructorReturn(self, call) { if (call && (PopupWithForm_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithForm_assertThisInitialized(self); }\nfunction PopupWithForm_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithForm_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithForm_getPrototypeOf(o) { PopupWithForm_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithForm_getPrototypeOf(o); }\n\nvar PopupWithForm = /*#__PURE__*/function (_Popup) {\n  PopupWithForm_inherits(PopupWithForm, _Popup);\n  var _super = PopupWithForm_createSuper(PopupWithForm);\n  function PopupWithForm(popupSelector, handleFormSubmit) {\n    var _this;\n    PopupWithForm_classCallCheck(this, PopupWithForm);\n    _this = _super.call(this, popupSelector);\n    _this._handleFormSubmit = handleFormSubmit;\n    // достаём (находим) элемент формы для того, чтобы в методе close сбросить все инпуты формы (сбросить форму)\n    _this._form = _this._popupElement.querySelector(\'.popup__form\');\n    // достаём (находим) все элементы полей\n    _this._inputList = _this._popupElement.querySelectorAll(\'.popup__input\');\n    _this._submitButton = _this._form.querySelector(\'.popup__save\');\n    // фиксируем начальный текст кнопки 1 раз в конструкторе\n    _this._submitButtonText = _this._submitButton.textContent;\n    return _this;\n  }\n  PopupWithForm_createClass(PopupWithForm, [{\n    key: "_getInputValues",\n    value: function _getInputValues() {\n      // создаём пустой объект\n      var formValues = {};\n\n      // добавляем в этот объект значения всех полей (инпутов), обойдя все поля (инпуты) по свойству (полю) name,\n      // то есть в объекте this._formValues  \n      this._inputList.forEach(function (input) {\n        formValues[input.name] = input.value;\n      });\n\n      // возвращаем объект значений\n      return formValues;\n    }\n    // Этим методом со мной поделился коллега из потока, спасибо ему :)\n    // Создаём метод, который присваивает свойству value` каждого из инпутов значения из элементов имени пользователя  \n    // и информации о себе из блока профиля, сохранённые в объект с помощью вызова метода getUserInfo из класса \n    // UserInfo, который передаётся как аргумент при вызове метода setInputValues  \n  }, {\n    key: "setInputValues",\n    value: function setInputValues(userData) {\n      this._inputList.forEach(function (input) {\n        // присваиваем `value` инпута данные из объекта по атрибуту `name` этого инпута\n        input.value = userData[input.name];\n      });\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this2 = this;\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "setEventListeners", this).call(this);\n      this._form.addEventListener(\'submit\', function (e) {\n        e.preventDefault();\n\n        // добавим вызов функции _handleFormSubmit\n        // передадим ей объект — результат работы _getInputValues\n        _this2._handleFormSubmit(_this2._getInputValues());\n      });\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "close", this).call(this);\n      this._form.reset();\n    }\n  }, {\n    key: "disableSubmitButton",\n    value: function disableSubmitButton() {\n      this._submitButton.disabled = true;\n    }\n  }, {\n    key: "enableSubmitButton",\n    value: function enableSubmitButton() {\n      this._submitButton.disabled = false;\n    }\n\n    // Спасибо Вам большое за этот замечательный метод! С удовольствием освоил его и узнал, что, оказывается, \n    // функции можно задавать параметры по умолчанию. В теории в тренажёре об этом, по-моему, не говорилось.\n    // указываем 2 параметра (2й с текстом по умолчанию, чтобы не указывать лишний раз его)\n  }, {\n    key: "renderLoading",\n    value: function renderLoading(isLoading) {\n      var loadingText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'Сохранение...\';\n      if (isLoading) {\n        this._submitButton.textContent = loadingText;\n      } else {\n        this._submitButton.textContent = this._submitButtonText;\n      }\n    }\n  }]);\n  return PopupWithForm;\n}(Popup);\n\n;// CONCATENATED MODULE: ./src/components/PopupWithConfirmation.js\nfunction PopupWithConfirmation_typeof(obj) { "@babel/helpers - typeof"; return PopupWithConfirmation_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithConfirmation_typeof(obj); }\nfunction PopupWithConfirmation_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithConfirmation_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithConfirmation_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithConfirmation_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithConfirmation_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithConfirmation_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithConfirmation_toPropertyKey(arg) { var key = PopupWithConfirmation_toPrimitive(arg, "string"); return PopupWithConfirmation_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithConfirmation_toPrimitive(input, hint) { if (PopupWithConfirmation_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithConfirmation_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupWithConfirmation_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithConfirmation_get = Reflect.get.bind(); } else { PopupWithConfirmation_get = function _get(target, property, receiver) { var base = PopupWithConfirmation_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithConfirmation_get.apply(this, arguments); }\nfunction PopupWithConfirmation_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithConfirmation_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithConfirmation_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithConfirmation_setPrototypeOf(subClass, superClass); }\nfunction PopupWithConfirmation_setPrototypeOf(o, p) { PopupWithConfirmation_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithConfirmation_setPrototypeOf(o, p); }\nfunction PopupWithConfirmation_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithConfirmation_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithConfirmation_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithConfirmation_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithConfirmation_possibleConstructorReturn(this, result); }; }\nfunction PopupWithConfirmation_possibleConstructorReturn(self, call) { if (call && (PopupWithConfirmation_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithConfirmation_assertThisInitialized(self); }\nfunction PopupWithConfirmation_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithConfirmation_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithConfirmation_getPrototypeOf(o) { PopupWithConfirmation_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithConfirmation_getPrototypeOf(o); }\n\nvar PopupWithConfirmation = /*#__PURE__*/function (_Popup) {\n  PopupWithConfirmation_inherits(PopupWithConfirmation, _Popup);\n  var _super = PopupWithConfirmation_createSuper(PopupWithConfirmation);\n  function PopupWithConfirmation(popupSelector, handleFormSubmit) {\n    var _this;\n    PopupWithConfirmation_classCallCheck(this, PopupWithConfirmation);\n    _this = _super.call(this, popupSelector);\n    _this._handleFormSubmit = handleFormSubmit;\n    _this._form = _this._popupElement.querySelector(\'.popup__form\');\n    _this._submitButton = _this._form.querySelector(\'.popup__save\');\n    // фиксируем начальный текст кнопки 1 раз в конструкторе\n    _this._submitButtonText = _this._submitButton.textContent;\n    return _this;\n  }\n  PopupWithConfirmation_createClass(PopupWithConfirmation, [{\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this2 = this;\n      PopupWithConfirmation_get(PopupWithConfirmation_getPrototypeOf(PopupWithConfirmation.prototype), "setEventListeners", this).call(this);\n      this._form.addEventListener(\'submit\', function (e) {\n        e.preventDefault();\n\n        // добавим вызов функции _handleFormSubmit\n        _this2._handleFormSubmit(_this2._card);\n      });\n    }\n  }, {\n    key: "open",\n    value: function open(card) {\n      PopupWithConfirmation_get(PopupWithConfirmation_getPrototypeOf(PopupWithConfirmation.prototype), "open", this).call(this);\n      this._card = card;\n    }\n  }, {\n    key: "disableSubmitButton",\n    value: function disableSubmitButton() {\n      this._submitButton.disabled = true;\n    }\n  }, {\n    key: "enableSubmitButton",\n    value: function enableSubmitButton() {\n      this._submitButton.disabled = false;\n    }\n  }, {\n    key: "renderLoading",\n    value: function renderLoading(isLoading) {\n      var loadingText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'Удаление...\';\n      if (isLoading) {\n        this._submitButton.textContent = loadingText;\n      } else {\n        this._submitButton.textContent = this._submitButtonText;\n      }\n    }\n  }]);\n  return PopupWithConfirmation;\n}(Popup);\n\n;// CONCATENATED MODULE: ./src/components/UserInfo.js\nfunction UserInfo_typeof(obj) { "@babel/helpers - typeof"; return UserInfo_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, UserInfo_typeof(obj); }\nfunction UserInfo_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction UserInfo_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, UserInfo_toPropertyKey(descriptor.key), descriptor); } }\nfunction UserInfo_createClass(Constructor, protoProps, staticProps) { if (protoProps) UserInfo_defineProperties(Constructor.prototype, protoProps); if (staticProps) UserInfo_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction UserInfo_toPropertyKey(arg) { var key = UserInfo_toPrimitive(arg, "string"); return UserInfo_typeof(key) === "symbol" ? key : String(key); }\nfunction UserInfo_toPrimitive(input, hint) { if (UserInfo_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (UserInfo_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar UserInfo = /*#__PURE__*/function () {\n  function UserInfo(_ref) {\n    var nameSelector = _ref.nameSelector,\n      infoSelector = _ref.infoSelector,\n      avatarSelector = _ref.avatarSelector;\n    UserInfo_classCallCheck(this, UserInfo);\n    this._nameElement = document.querySelector(nameSelector);\n    this._infoElement = document.querySelector(infoSelector);\n    this._avatarElement = document.querySelector(avatarSelector);\n  }\n  UserInfo_createClass(UserInfo, [{\n    key: "getUserInfo",\n    value: function getUserInfo() {\n      // создаём пустой объект\n      var userInfo = {};\n\n      // Присваиваем полю name объекта userInfo значение элемента имени пользователя из блока профиля\n      userInfo.name = this._nameElement.textContent;\n\n      // Присваиваем полю info объекта userInfo значение элемента информации о себе из блока профиля\n      userInfo.about = this._infoElement.textContent;\n\n      // Возвращаем объект userInfo с полями name и info, которым присвоены значения элементов имени пользователя\n      // и информации о себе из блока профиля \n      return userInfo;\n    }\n  }, {\n    key: "setUserInfo",\n    value: function setUserInfo(_ref2) {\n      var name = _ref2.name,\n        about = _ref2.about,\n        avatar = _ref2.avatar,\n        _id = _ref2._id;\n      // Присваиваем элементу имени пользователя из блока профиля значение свойства name, которое передаётся \n      // в качестве аргумента при вызове метода setUserInfo\n      this._nameElement.textContent = name;\n\n      // Присваиваем элементу информации о себе из блока профиля значение свойства about, которое передаётся  \n      // в качестве аргумента при вызове метода setUserInfo\n      this._infoElement.textContent = about;\n\n      // Присваиваем атрибуту src элемента аватара из блока профиля значение свойства avatar, которое передаётся  \n      // в качестве аргумента при вызове метода setUserInfo\n      this._avatarElement.src = avatar;\n\n      // Присваиваем элементу информации о себе из блока профиля значение свойства _id, которое передаётся  \n      // в качестве аргумента при вызове метода setUserInfo\n      this._id = _id;\n    }\n  }, {\n    key: "getId",\n    value: function getId() {\n      return this._id;\n    }\n  }]);\n  return UserInfo;\n}();\n\n;// CONCATENATED MODULE: ./src/components/Api.js\nfunction Api_typeof(obj) { "@babel/helpers - typeof"; return Api_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Api_typeof(obj); }\nfunction Api_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Api_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Api_toPropertyKey(descriptor.key), descriptor); } }\nfunction Api_createClass(Constructor, protoProps, staticProps) { if (protoProps) Api_defineProperties(Constructor.prototype, protoProps); if (staticProps) Api_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Api_toPropertyKey(arg) { var key = Api_toPrimitive(arg, "string"); return Api_typeof(key) === "symbol" ? key : String(key); }\nfunction Api_toPrimitive(input, hint) { if (Api_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Api_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Api = /*#__PURE__*/function () {\n  function Api(options) {\n    Api_classCallCheck(this, Api);\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  Api_createClass(Api, [{\n    key: "_checkResponse",\n    value: function _checkResponse(res) {\n      if (res.ok) {\n        return res.json();\n      }\n\n      // если ошибка, отклоняем промис\n      return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(res.status));\n    }\n\n    // Огромное Вам спасибо за этот метод, с большим интересом разобрался и использовал его!\n  }, {\n    key: "_request",\n    value: function _request(endpoint, options) {\n      return fetch("".concat(this._baseUrl).concat(endpoint), options).then(this._checkResponse);\n    }\n  }, {\n    key: "getUserInfo",\n    value: function getUserInfo() {\n      return this._request(\'/users/me\', {\n        headers: this._headers\n      });\n    }\n  }, {\n    key: "getInitialCards",\n    value: function getInitialCards() {\n      return this._request(\'/cards\', {\n        headers: this._headers\n      });\n    }\n  }, {\n    key: "editProfile",\n    value: function editProfile(formValues) {\n      return this._request(\'/users/me\', {\n        method: \'PATCH\',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: formValues.name,\n          about: formValues.about\n        })\n      });\n    }\n  }, {\n    key: "addNewCard",\n    value: function addNewCard(formValues) {\n      return this._request(\'/cards\', {\n        method: \'POST\',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: formValues.place,\n          link: formValues.url\n        })\n      });\n    }\n  }, {\n    key: "deleteCard",\n    value: function deleteCard(cardId) {\n      return this._request("/cards/".concat(cardId), {\n        method: \'DELETE\',\n        headers: this._headers\n      });\n    }\n  }, {\n    key: "setLike",\n    value: function setLike(cardId, method) {\n      return this._request("/cards/".concat(cardId, "/likes"), {\n        method: method,\n        headers: this._headers\n      });\n    }\n  }, {\n    key: "addNewAvatar",\n    value: function addNewAvatar(formValues) {\n      return this._request(\'/users/me/avatar\', {\n        method: \'PATCH\',\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: formValues.url\n        })\n      });\n    }\n  }]);\n  return Api;\n}();\n\n;// CONCATENATED MODULE: ./src/pages/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n// Импорты\n// _______________________________________________________________________________________________________________\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Взаимодействие с API\n// _______________________________________________________________________________________________________________\n\n// Создаём экземпляр класса Api\nvar api = new Api({\n  baseUrl: \'https://mesto.nomoreparties.co/v1/cohort-59\',\n  headers: {\n    authorization: \'cfebb862-70aa-4cd6-a9bd-6d5609babeaa\',\n    \'Content-Type\': \'application/json\'\n  }\n});\n\n// Создаём Promise.all для загрузки информации о пользователе и массива карточек с сервера\nPromise.all([api.getUserInfo(), api.getInitialCards()]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    userData = _ref2[0],\n    cards = _ref2[1];\n  userInfo.setUserInfo(userData); // С помощью публичного метода setUserInfo класса UserInfo принимаем новые данные \n  // пользователя и добавляем их на страницу.\n  cardList.renderItems(cards); // С помощью публичного метода renderItems класса Section добавляем готовые\n  // DOM-элементы всех карточек в контейнер\n}).catch(function (err) {\n  console.log(err); // выведем ошибку в консоль\n});\n\n// Создание карточек\n// _______________________________________________________________________________________________________________\n\n// Создаём эеземпляр класса Section, то есть списка карточек: \n// С помощью функции renderer cоздаём и возвращаем экземпляр карточки на основе объекта из массива карточек,\n// полученных с сервера. Этот массив содержит 30 последних карточек, созданных пользователями на сервере. Каждая \n// карточка представляет с собой объект с полями name и link.\nvar cardList = new Section({\n  renderer: function renderer(item) {\n    // Создадим экземпляр карточки\n    var card = new Card(item, \'#element-template\', handleCardClick, handleDeleteClick, handleLikeClick, userInfo.getId());\n\n    // Создаём карточку и возвращаем наружу\n    var cardElement = card.generateCard();\n    return cardElement;\n    // С помощью публичного метода addItem класса Section добавляем готовый DOM-элемент карточки в контейнер,\n    // в качестве аргумента передаём вызов функции createCard, которая создаёт новую карточку и готовит её к \n    // публикации (т. е. создаёт уже готовый DOM-элемент карточки)\n    // cardList.addItem(createCard(item));\n  }\n}, \'.elements-list\');\n\n// Функции для попапов и лайков\n// _______________________________________________________________________________________________________________\n\n// Создаём функцию открытия попапа показа изображения по клике на картинку карточки\nfunction handleCardClick(name, link) {\n  popupImage.open(name, link);\n}\n;\n\n// Создаём функцию открытия попапа удаления карточки по клике на кнопку удаления карточки\nfunction handleDeleteClick(card) {\n  popupDeleteCard.open(card);\n}\n;\n\n// Создаём функцию сабмита для попапа профиля, которая вносит изменения в имя и профессию в блоке профиля, записывая \n// данные которые вписываются пользователем в инпуты в попапе профиля\nvar handleProfileFormSubmit = function handleProfileFormSubmit(formValues) {\n  popupProfile.renderLoading(true);\n  popupProfile.disableSubmitButton();\n  api.editProfile(formValues).then(function (userData) {\n    userInfo.setUserInfo(userData);\n    popupProfile.renderLoading(true, \'Сохранено!\');\n    setTimeout(function () {\n      return popupProfile.close();\n    }, 1000);\n  }).catch(function (err) {\n    console.log(err); // выведем ошибку в консоль\n    popupProfile.renderLoading(true, \'Ошибка запроса!\');\n  }).finally(function () {\n    // В любом случае\n    setTimeout(function () {\n      popupProfile.enableSubmitButton();\n      popupProfile.renderLoading(false);\n    }, 1500);\n  });\n};\n\n// Создаём функцию сабмита для попапа добавления карточки\nvar handleCardFormSubmit = function handleCardFormSubmit(formValues) {\n  popupCard.renderLoading(true);\n  popupCard.disableSubmitButton();\n  api.addNewCard(formValues).then(function (cardData) {\n    popupCard.renderLoading(true, \'Создано!\');\n    cardList.addItem(cardData);\n    setTimeout(function () {\n      return popupCard.close();\n    }, 1000);\n  }).catch(function (err) {\n    console.log(err); // выведем ошибку в консоль\n    popupCard.renderLoading(true, \'Ошибка запроса!\');\n  }).finally(function () {\n    // В любом случае\n    setTimeout(function () {\n      popupCard.enableSubmitButton();\n      popupCard.renderLoading(false);\n    }, 1500);\n  });\n};\n\n// Создаём функцию сабмита попапа для удаления карточки\nvar handleDeleteCardFormSubmit = function handleDeleteCardFormSubmit(card) {\n  popupDeleteCard.renderLoading(true);\n  popupDeleteCard.disableSubmitButton();\n  api.deleteCard(card._id).then(function () {\n    popupDeleteCard.renderLoading(true, \'Удалено!\');\n    card.handleDeleteButtonClick();\n    popupDeleteCard.close();\n  }).catch(function (err) {\n    console.log(err); // выведем ошибку в консоль\n  }).finally(function () {\n    // В любом случае\n    setTimeout(function () {\n      popupDeleteCard.enableSubmitButton();\n      popupDeleteCard.renderLoading(false);\n    }, 1500);\n  });\n};\n\n// Создаём функцию сабмита попапа для обновления аватара пользователя\nvar handleNewAvatarFormSubmit = function handleNewAvatarFormSubmit(formValues) {\n  popupNewAvatar.renderLoading(true);\n  popupNewAvatar.disableSubmitButton();\n  api.addNewAvatar(formValues).then(function (userData) {\n    userInfo.setUserInfo(userData);\n    popupNewAvatar.renderLoading(true, \'Сохранено!\');\n    setTimeout(function () {\n      return popupNewAvatar.close();\n    }, 1000);\n  }).catch(function (err) {\n    console.log(err); // выведем ошибку в консоль\n    popupNewAvatar.renderLoading(true, \'Ошибка запроса!\');\n  }).finally(function () {\n    // В любом случае\n    setTimeout(function () {\n      popupNewAvatar.enableSubmitButton();\n      popupNewAvatar.renderLoading(false);\n    }, 1500);\n  });\n};\n\n// Создаём функцию постановки/снятия лайка\nvar handleLikeClick = function handleLikeClick(cardId, card) {\n  var method = card.isLiked() ? \'DELETE\' : \'PUT\';\n  api.setLike(cardId, method).then(function (res) {\n    card.handleLikeButtonClick();\n    card.setLikesValue(res.likes);\n  }).catch(function (err) {\n    console.log(err); // выведем ошибку в консоль\n  });\n};\n\n// Создание экземпляров классов для попапов\n// _______________________________________________________________________________________________________________\n\n// Создаём новый экземпляр класса UserInfo \nvar userInfo = new UserInfo({\n  nameSelector: \'.profile-info__name\',\n  infoSelector: \'.profile-info__profession\',\n  avatarSelector: \'.profile__avatar\'\n});\n\n// Создаём экземпляр класса PopupWithImage для попапа с картинкой и устанавливаем слушателей в этот экземпляр \nvar popupImage = new PopupWithImage(\'.popup_type_image\');\npopupImage.setEventListeners();\n\n// Создаём экземпляр класса PopupWithImage для попапа просмотра аватара (но он ещё не доделан и класс будет другой :) и устанавливаем слушателей в этот экземпляр\nvar popupViewAvatar = new PopupWithImage(\'.popup_type_view-avatar\');\npopupViewAvatar.setEventListeners();\n\n// Создаём новый экземпляр класса PopupWithForm для попапа профиля и устанавливаем слушателей в этот экземпляр\nvar popupProfile = new PopupWithForm(\'.popup_type_profile\', handleProfileFormSubmit);\npopupProfile.setEventListeners();\n\n// Создаём новый экземпляр класса PopupWithForm для попапа добавления карточки и устанавливаем слушателей в этот экземпляр\nvar popupCard = new PopupWithForm(\'.popup_type_card\', handleCardFormSubmit);\npopupCard.setEventListeners();\n\n// Создаём новый экземпляр класса PopupWithForm для попапа обновления аватара пользователя\nvar popupNewAvatar = new PopupWithForm(\'.popup_type_new-avatar\', handleNewAvatarFormSubmit);\npopupNewAvatar.setEventListeners();\n\n// Создаём новый экземпляр класса PopupWithConfirmation для попапа удаления карточки\nvar popupDeleteCard = new PopupWithConfirmation(\'.popup_type_delete-card\', handleDeleteCardFormSubmit);\npopupDeleteCard.setEventListeners();\n\n// Слушатели (обработчики) событий.\n// _______________________________________________________________________________________________________________\n\n// Слушатель, который запускает функцию открытия попапа редактирования профиля по клику на кнопке edit и делает так,  \n// чтобы инпуты в форме попапа приняли текстовые значения из блока профиля для имени и професии\npopupProfileOpenButtonElement.addEventListener(\'click\', function () {\n  popupProfile.setInputValues(userInfo.getUserInfo());\n  formValidators[\'profile-popupform\'].resetValidation();\n  popupProfile.open();\n});\n\n// Слушатель, который открывает попап добавления карточки по клику на кнопке add\npopupCardOpenButtonElement.addEventListener(\'click\', function () {\n  formValidators[\'card-popupform\'].resetValidation();\n  popupCard.open();\n});\n\n// Слушатель, который открывает попап обновления аватара пользователя\nprofileImageElement.addEventListener(\'click\', function () {\n  formValidators[\'new-avatar-popupform\'].resetValidation();\n  popupNewAvatar.open();\n});\n\n// Хотел попробовать сделать ещё один попап для просмотра аватара пользователя, чтобы этот попап открывался \n// по двойному щелчку. Но он, почему-то не открывается))\n// Слушатель, который открывает попап просмотра аватара пользователя\n// profileImageElement.addEventListener(\'dblclick\', function () {\n//   popupViewAvatar.open(profileNameElement.textContent, profileImageElement.src);\n// });\n\n// Валидация форм\n// _______________________________________________________________________________________________________________\n\n// Спасибо Вам огромное, ну что за чудо-функция! Было настолько интересно в ней разобраться и понять, как она \n// работает! Впервые встречаю такую довольно сложную и разветвлённую функцию :)\nvar formValidators = {}; // Создаём пустой объект formValidators, в который будут записаны экземпляры класса\n// FormValidator для всех форм в проекте\n\n// Создаём общую для всех форм в проекте функцию включения валидации\nvar enableValidation = function enableValidation(config) {\n  // Создаём массив из всех форм в проекте, найдя их по селектору формы из объекта config для валидации\n  var formList = Array.from(document.querySelectorAll(config.formSelector));\n\n  // Проходимся по всему массиву форм в проекте (formList) - с помощью метода forEch для массивов создаём для \n  // каждой формы из массива свой отдельный экземпляр класса FormValidator. При создании экземпляров передаём, \n  // как и полагается, 2 аргумента - элемент формы и объект config для валидации  \n  formList.forEach(function (formElement) {\n    var validator = new FormValidator(config, formElement);\n    // получаем данные из атрибута `name` у формы\n    var formName = formElement.getAttribute(\'name\');\n\n    // вот тут в объект записываем каждую из форм проекта под именем, равным значению атрибута name каждой формы \n    formValidators[formName] = validator;\n    // Запускаем валидацию для каждой отдельной формы\n    validator.enableValidation();\n    validator.resetValidation();\n  });\n};\n\n// Вызываем (запускаем) общую для всех форм в проекте функцию включения валидации форм\nenableValidation(utils_config);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///887\n')}},__webpack_exports__={};__webpack_modules__[887]()})();